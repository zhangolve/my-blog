{"version":3,"file":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js-4794e21644a91fc2238d.js","mappings":"wPAkCA,EA/Be,SAAC,GAAD,IAAGA,EAAH,EAAGA,YAAH,OACb,kBACEC,KAAKA,EAAAA,EAAAA,IAAI,CACPC,GAAI,EACJC,GAAI,KAHR,MAMK,IAAIC,MAAOC,cANhB,oBAQE,QAAC,OAAD,CAAUC,KAAK,4BAAf,UARF,YAUGN,EACGA,EAAYO,KAAI,SAACC,EAAUC,EAAGC,GAAd,OACd,QAAC,EAAAC,SAAD,CAAUC,IAAKJ,EAASK,MACtB,QAAC,OAAD,CACEP,KAAME,EAASK,IACfC,OAAO,SACPC,IAAI,uBAEHP,EAASQ,MAEXN,EAAIO,OAAS,IAAMR,IAClB,QAAC,EAAAE,SAAD,sBAMN,O,8BCDR,EA1BiB,SAAC,GAAD,IAAGO,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,QAAtB,OACf,wBACE,uBACE,QAAC,QAAD,CACEC,GAAI,CACFC,GAAI,KAGN,QAAC,OAAD,CACEC,GAAIC,EAAAA,GACJH,GAAI,CACFI,eAAe,QAEjBC,GAAIR,GAEHD,GAASC,KAGd,qBAAQC,KAEV,wBACE,QAAC,OAAD,KAAWC,MCdjB,EARiB,SAAC,GAAD,IAAGO,EAAH,EAAGA,MAAH,OACf,wBACGA,EAAMrB,KAAI,SAACsB,GAAD,OACT,QAAC,GAAD,QAAUjB,IAAKiB,EAAKV,MAAUU,SCUpC,EAVc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUF,EAAb,EAAaA,MAAOG,EAApB,EAAoBA,UAAW/B,EAA/B,EAA+BA,YAA/B,OACZ,QAAC,IAAD,CAAQ8B,SAAUA,EAAUZ,MAAOa,IACjC,QAAC,IAAD,CAAKb,MAAM,UACX,qBACE,QAAC,EAAD,CAAUU,MAAOA,MAEnB,QAAC,EAAD,CAAQ5B,YAAaA,MCTzB,ECAqB,SAAC,GAAwB,IAAtB8B,EAAqB,EAArBA,SAAUE,EAAW,EAAXA,KACxBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACd,OACE,QAAC,EAAD,CACEJ,SAAUA,EACVF,MAAOM,EAAYC,MACnBJ,UAAWE,EAAKG,aAAalB,MAC7BlB,YAAaiC,EAAKG,aAAaC","sources":["webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/home-footer.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/post-link.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/post-list.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/components/posts.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog-core/src/templates/posts-query.js","webpack://gatsby-starter-blog-theme/./node_modules/gatsby-theme-blog/src/gatsby-theme-blog-core/components/posts.js"],"sourcesContent":["import React, { Fragment } from \"react\"\r\nimport { Themed, css } from \"theme-ui\"\r\n\r\nconst Footer = ({ socialLinks }) => (\r\n  <footer\r\n    css={css({\r\n      mt: 4,\r\n      pt: 3,\r\n    })}\r\n  >\r\n    Â© {new Date().getFullYear()}, Powered by\r\n    {` `}\r\n    <Themed.a href=\"https://www.gatsbyjs.com\">Gatsby</Themed.a>\r\n    {` `}&bull;{` `}\r\n    {socialLinks\r\n      ? socialLinks.map((platform, i, arr) => (\r\n          <Fragment key={platform.url}>\r\n            <Themed.a\r\n              href={platform.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {platform.name}\r\n            </Themed.a>\r\n            {arr.length - 1 !== i && (\r\n              <Fragment>\r\n                {` `}&bull;{` `}\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        ))\r\n      : null}\r\n  </footer>\r\n)\r\nexport default Footer\r\n","/** @jsx jsx */\r\nimport { Themed, jsx } from \"theme-ui\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst PostLink = ({ title, slug, date, excerpt }) => (\r\n  <article>\r\n    <header>\r\n      <Themed.h2\r\n        sx={{\r\n          mb: 1,\r\n        }}\r\n      >\r\n        <Themed.a\r\n          as={Link}\r\n          sx={{\r\n            textDecoration: `none`,\r\n          }}\r\n          to={slug}\r\n        >\r\n          {title || slug}\r\n        </Themed.a>\r\n      </Themed.h2>\r\n      <small>{date}</small>\r\n    </header>\r\n    <section>\r\n      <Themed.p>{excerpt}</Themed.p>\r\n    </section>\r\n  </article>\r\n)\r\n\r\nexport default PostLink\r\n","import * as React from \"react\"\r\nimport PostLink from \"./post-link\"\r\n\r\nconst PostList = ({ posts }) => (\r\n  <>\r\n    {posts.map((node) => (\r\n      <PostLink key={node.slug} {...node} />\r\n    ))}\r\n  </>\r\n)\r\n\r\nexport default PostList\r\n","import * as React from \"react\"\r\nimport Layout from \"./layout\"\r\nimport SEO from \"./seo\"\r\nimport Footer from \"./home-footer\"\r\nimport PostList from \"./post-list\"\r\n\r\nconst Posts = ({ location, posts, siteTitle, socialLinks }) => (\r\n  <Layout location={location} title={siteTitle}>\r\n    <SEO title=\"Home\" />\r\n    <main>\r\n      <PostList posts={posts} />\r\n    </main>\r\n    <Footer socialLinks={socialLinks} />\r\n  </Layout>\r\n)\r\n\r\nexport default Posts\r\n","import { graphql } from \"gatsby\"\nimport PostsPage from \"../components/posts\"\n\nexport default PostsPage\n\nexport const query = graphql`\n  query PostsQuery($limit: Int!, $filter: BlogPostFilterInput) {\n    site {\n      siteMetadata {\n        title\n        social {\n          name\n          url\n        }\n      }\n    }\n    allBlogPost(\n      sort: { fields: [date, title], order: DESC }\n      filter: $filter\n      limit: $limit\n    ) {\n      nodes {\n        id\n        excerpt\n        slug\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n","import * as React from \"react\"\r\nimport Posts from \"../../components/posts\"\r\n\r\nconst PostsWrapper = ({ location, data }) => {\r\n  const { site, allBlogPost } = data\r\n  return (\r\n    <Posts\r\n      location={location}\r\n      posts={allBlogPost.nodes}\r\n      siteTitle={site.siteMetadata.title}\r\n      socialLinks={site.siteMetadata.social}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PostsWrapper\r\n"],"names":["socialLinks","css","mt","pt","Date","getFullYear","href","map","platform","i","arr","Fragment","key","url","target","rel","name","length","title","slug","date","excerpt","sx","mb","as","Link","textDecoration","to","posts","node","location","siteTitle","data","site","allBlogPost","nodes","siteMetadata","social"],"sourceRoot":""}